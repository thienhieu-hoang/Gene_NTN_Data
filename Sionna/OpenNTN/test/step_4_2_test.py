# This file is very huge, as it effectively tests a significant portion of the values in the parametrization tables for all scenarios.
# The order of Large Scale parameters (LSPs) differs from the standard and is: DS ASD ASA SF K ZSA ZSD. This is to keep
# in line with the rest of the Sionna implementation. At the moment the proper distribution of all sampled parameters is evaluated, a test of 
# the spatial and parameter-cross-correlation is still to be implemented.
# This file only tests the correlation between the LSP, whereas the correct distribution is tested in step_4_lsp_generation_test.py. The standard
# 3GPP TR38.811 uses the value N/A for a fewcorrelations, which is interpreted as 0.0 in this implementation. Additionally, despite the standard not
# mentioning it, the correlation between ZSD and ASD to any other paramter is set to 0.0 in the DL case, the both ZSD and ASD are set to -inf in every case,
# removing the correlation to other parameters.

from sionna.phy.channel.tr38811 import utils   # The code to test
import unittest   # The test framework
from sionna.phy.channel.tr38811 import Antenna, AntennaArray, DenseUrban, SubUrban, Urban, CDL
import numpy as np
import tensorflow as tf
import math

def create_ut_ant(carrier_frequency):
    ut_ant = Antenna(polarization="single",
                    polarization_type="V",
                    antenna_pattern="38.901",
                    carrier_frequency=carrier_frequency)
    return ut_ant

def create_bs_ant(carrier_frequency):
    bs_ant = AntennaArray(num_rows=1,
                            num_cols=4,
                            polarization="dual",
                            polarization_type="VH",
                            antenna_pattern="38.901",
                            carrier_frequency=carrier_frequency)
    return bs_ant

def square_matrix(mat):
    return tf.linalg.matmul(mat,tf.linalg.adjoint(mat))



class Test_URB(unittest.TestCase):
# Values taken from Table 6.7.2-4a: Channel model parameters for Urban Scenario (NLOS) at S band and 
# Table 6.7.2-3a: Channel model parameters for Urban Scenario (LOS) at S band
    def test_s_band_10_degrees_dl(self):
        elevation_angle = 10.0

        direction = "downlink"
        scenario = "urb"
        carrier_frequency = 2.2e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=10, num_ut=10, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)

        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.38
        ASAvsSF_nlos = -0.05
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.22
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.31
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.0
        ZSAvsDS_nlos = 0.05
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = 0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = 0.04
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_s_band_10_degrees_ul(self):
        elevation_angle = 10.0

        direction = "uplink"
        scenario = "urb"
        carrier_frequency = 2.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.54
        ASAvsDS_nlos = 0.38
        ASAvsSF_nlos = -0.05
        ASDvsSF_nlos = -0.48
        DSvsSF_nlos = -0.22
        ASDvsASA_nlos = 0.41
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.02
        ZSAvsSF_nlos = -0.31
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.69
        ZSAvsDS_nlos = 0.05
        ZSDvsASD_nlos = 0.52
        ZSAvsASD_nlos = 0.05
        ZSDvsASA_nlos = 0.4
        ZSAvsASA_nlos = 0.04
        ZSDvsZSA_nlos = -0.03

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_s_band_20_degrees_dl(self):
        elevation_angle = 20.0

        direction = "downlink"
        scenario = "urb"
        carrier_frequency = 2.2e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.36
        ASAvsSF_nlos = -0.04
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.26
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.33
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.0
        ZSAvsDS_nlos = 0.09
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = 0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = 0.13
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_s_band_20_degrees_ul(self):
        elevation_angle = 20.0

        direction = "uplink"
        scenario = "urb"
        carrier_frequency = 2.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.46
        ASAvsDS_nlos = 0.36
        ASAvsSF_nlos = -0.04
        ASDvsSF_nlos = -0.53
        DSvsSF_nlos = -0.26
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.33
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.72
        ZSAvsDS_nlos = 0.09
        ZSDvsASD_nlos = 0.48
        ZSAvsASD_nlos = 0.11
        ZSDvsASA_nlos = 0.39
        ZSAvsASA_nlos = 0.13
        ZSDvsZSA_nlos = 0.04

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_s_band_30_degrees_dl(self):
        elevation_angle = 30.0

        direction = "downlink"
        scenario = "urb"
        carrier_frequency = 2.2e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.27
        ASAvsSF_nlos = -0.04
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.21
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = 0.0
        ZSAvsSF_nlos = -0.33
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.0
        ZSAvsDS_nlos = 0.09
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = 0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = 0.16
        ZSDvsZSA_nlos = 0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_s_band_30_degrees_ul(self):
        elevation_angle = 30.0

        direction = "uplink"
        scenario = "urb"
        carrier_frequency = 2.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.56
        ASAvsDS_nlos = 0.27
        ASAvsSF_nlos = -0.04
        ASDvsSF_nlos = -0.52
        DSvsSF_nlos = -0.21
        ASDvsASA_nlos = 0.33
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = 0.01
        ZSAvsSF_nlos = -0.33
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.68
        ZSAvsDS_nlos = 0.09
        ZSDvsASD_nlos = 0.6
        ZSAvsASD_nlos = 0.13
        ZSDvsASA_nlos = 0.34
        ZSAvsASA_nlos = 0.16
        ZSDvsZSA_nlos = 0.07

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_s_band_40_degrees_dl(self):
        elevation_angle = 40.0

        direction = "downlink"
        scenario = "urb"
        carrier_frequency = 2.2e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.29
        ASAvsSF_nlos = -0.04
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.25
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = 0.0
        ZSAvsSF_nlos = -0.33
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.0
        ZSAvsDS_nlos = 0.09
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = 0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = 0.13
        ZSDvsZSA_nlos = 0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_s_band_40_degrees_ul(self):
        elevation_angle = 40.0

        direction = "uplink"
        scenario = "urb"
        carrier_frequency = 2.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.52
        ASAvsDS_nlos = 0.29
        ASAvsSF_nlos = -0.04
        ASDvsSF_nlos = -0.52
        DSvsSF_nlos = -0.25
        ASDvsASA_nlos = 0.37
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = 0.0
        ZSAvsSF_nlos = -0.33
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.68
        ZSAvsDS_nlos = 0.09
        ZSDvsASD_nlos = 0.56
        ZSAvsASD_nlos = 0.14
        ZSDvsASA_nlos = 0.37
        ZSAvsASA_nlos = 0.13
        ZSDvsZSA_nlos = 0.07

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_s_band_50_degrees_dl(self):
        elevation_angle = 50.0

        direction = "downlink"
        scenario = "urb"
        carrier_frequency = 2.2e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.21
        ASAvsSF_nlos = -0.03
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.21
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = 0.0
        ZSAvsSF_nlos = -0.38
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.0
        ZSAvsDS_nlos = -0.03
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = 0.13
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_s_band_50_degrees_ul(self):
        elevation_angle = 50.0

        direction = "uplink"
        scenario = "urb"
        carrier_frequency = 2.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.6
        ASAvsDS_nlos = 0.21
        ASAvsSF_nlos = -0.03
        ASDvsSF_nlos = -0.54
        DSvsSF_nlos = -0.21
        ASDvsASA_nlos = 0.23
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = 0.01
        ZSAvsSF_nlos = -0.38
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.64
        ZSAvsDS_nlos = -0.03
        ZSDvsASD_nlos = 0.62
        ZSAvsASD_nlos = -0.02
        ZSDvsASA_nlos = 0.31
        ZSAvsASA_nlos = 0.13
        ZSDvsZSA_nlos = -0.01

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_s_band_60_degrees_dl(self):
        elevation_angle = 60.0

        direction = "downlink"
        scenario = "urb"
        carrier_frequency = 2.2e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.24
        ASAvsSF_nlos = -0.05
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.19
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = 0.0
        ZSAvsSF_nlos = -0.39
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.0
        ZSAvsDS_nlos = -0.15
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = 0.14
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_s_band_60_degrees_ul(self):
        elevation_angle = 60.0

        direction = "uplink"
        scenario = "urb"
        carrier_frequency = 2.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.59
        ASAvsDS_nlos = 0.24
        ASAvsSF_nlos = -0.05
        ASDvsSF_nlos = -0.51
        DSvsSF_nlos = -0.19
        ASDvsASA_nlos = 0.23
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = 0.01
        ZSAvsSF_nlos = -0.39
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.65
        ZSAvsDS_nlos = -0.15
        ZSDvsASD_nlos = 0.6
        ZSAvsASD_nlos = -0.11
        ZSDvsASA_nlos = 0.28
        ZSAvsASA_nlos = 0.14
        ZSDvsZSA_nlos = -0.12

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_s_band_70_degrees_dl(self):
        elevation_angle = 70.0

        direction = "downlink"
        scenario = "urb"
        carrier_frequency = 2.2e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.22
        ASAvsSF_nlos = -0.02
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.19
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.37
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.0
        ZSAvsDS_nlos = -0.13
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.02
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_s_band_70_degrees_ul(self):
        elevation_angle = 70.0

        direction = "uplink"
        scenario = "urb"
        carrier_frequency = 2.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.6
        ASAvsDS_nlos = 0.22
        ASAvsSF_nlos = -0.02
        ASDvsSF_nlos = -0.5
        DSvsSF_nlos = -0.19
        ASDvsASA_nlos = 0.22
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.02
        ZSAvsSF_nlos = -0.37
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.64
        ZSAvsDS_nlos = -0.13
        ZSDvsASD_nlos = 0.65
        ZSAvsASD_nlos = -0.13
        ZSDvsASA_nlos = 0.23
        ZSAvsASA_nlos = -0.02
        ZSDvsZSA_nlos = -0.15

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_s_band_80_degrees_dl(self):
        elevation_angle = 80.0

        direction = "downlink"
        scenario = "urb"
        carrier_frequency = 2.2e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.24
        ASAvsSF_nlos = -0.01
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.2
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.37
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.0
        ZSAvsDS_nlos = -0.29
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.2
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_s_band_80_degrees_ul(self):
        elevation_angle = 80.0

        direction = "uplink"
        scenario = "urb"
        carrier_frequency = 2.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.57
        ASAvsDS_nlos = 0.24
        ASAvsSF_nlos = -0.01
        ASDvsSF_nlos = -0.48
        DSvsSF_nlos = -0.2
        ASDvsASA_nlos = 0.23
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.08
        ZSAvsSF_nlos = -0.37
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.61
        ZSAvsDS_nlos = -0.29
        ZSDvsASD_nlos = 0.59
        ZSAvsASD_nlos = -0.26
        ZSDvsASA_nlos = 0.21
        ZSAvsASA_nlos = -0.2
        ZSDvsZSA_nlos = -0.34

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_s_band_90_degrees_dl(self):
        elevation_angle = 90.0

        direction = "downlink"
        scenario = "urb"
        carrier_frequency = 2.2e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.24
        ASAvsSF_nlos = -0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.2
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.36
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.0
        ZSAvsDS_nlos = -0.19
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.46
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_s_band_90_degrees_ul(self):
        elevation_angle = 90.0

        direction = "uplink"
        scenario = "urb"
        carrier_frequency = 2.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.64
        ASAvsDS_nlos = 0.24
        ASAvsSF_nlos = -0.0
        ASDvsSF_nlos = -0.43
        DSvsSF_nlos = -0.2
        ASDvsASA_nlos = 0.21
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.12
        ZSAvsSF_nlos = -0.36
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.53
        ZSAvsDS_nlos = -0.19
        ZSDvsASD_nlos = 0.64
        ZSAvsASD_nlos = -0.22
        ZSDvsASA_nlos = 0.28
        ZSAvsASA_nlos = -0.46
        ZSDvsZSA_nlos = -0.36

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    # Values from tables Table 6.7.2-2b: Channel model parameters for Dense Urban Scenario (NLOS) in Ka band
    # and Table 6.7.2-5b: Channel model parameters for Suburban Scenario (LOS) in Ka band

    def test_ka_band_10_degrees_dl(self):
        elevation_angle = 10.0

        direction = "downlink"
        scenario = "urb"
        carrier_frequency = 20.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.38
        ASAvsSF_nlos = -0.05
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.21
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.31
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.0
        ZSAvsDS_nlos = 0.06
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = 0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = 0.05
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_ka_band_10_degrees_ul(self):
        elevation_angle = 10.0

        direction = "uplink"
        scenario = "urb"
        carrier_frequency = 30.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)

        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.55
        ASAvsDS_nlos = 0.38
        ASAvsSF_nlos = -0.05
        ASDvsSF_nlos = -0.48
        DSvsSF_nlos = -0.21
        ASDvsASA_nlos = 0.41
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.02
        ZSAvsSF_nlos = -0.31
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.68
        ZSAvsDS_nlos = 0.06
        ZSDvsASD_nlos = 0.52
        ZSAvsASD_nlos = 0.06
        ZSDvsASA_nlos = 0.4
        ZSAvsASA_nlos = 0.05
        ZSDvsZSA_nlos = -0.02

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_ka_band_20_degrees_dl(self):
        elevation_angle = 20.0

        direction = "downlink"
        scenario = "urb"
        carrier_frequency = 20.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.37
        ASAvsSF_nlos = -0.04
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.25
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.32
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.0
        ZSAvsDS_nlos = 0.1
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = 0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = 0.13
        ZSDvsZSA_nlos = 0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_ka_band_20_degrees_ul(self):
        elevation_angle = 20.0

        direction = "uplink"
        scenario = "urb"
        carrier_frequency = 30.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.47
        ASAvsDS_nlos = 0.37
        ASAvsSF_nlos = -0.04
        ASDvsSF_nlos = -0.52
        DSvsSF_nlos = -0.25
        ASDvsASA_nlos = 0.42
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.32
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.72
        ZSAvsDS_nlos = 0.1
        ZSDvsASD_nlos = 0.48
        ZSAvsASD_nlos = 0.12
        ZSDvsASA_nlos = 0.41
        ZSAvsASA_nlos = 0.13
        ZSDvsZSA_nlos = 0.04

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_ka_band_30_degrees_dl(self):
        elevation_angle = 30.0

        direction = "downlink"
        scenario = "urb"
        carrier_frequency = 20.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.29
        ASAvsSF_nlos = -0.04
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.21
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = 0.0
        ZSAvsSF_nlos = -0.33
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.0
        ZSAvsDS_nlos = 0.11
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = 0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = 0.16
        ZSDvsZSA_nlos = 0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_ka_band_30_degrees_ul(self):
        elevation_angle = 30.0

        direction = "uplink"
        scenario = "urb"
        carrier_frequency = 30.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.55
        ASAvsDS_nlos = 0.29
        ASAvsSF_nlos = -0.04
        ASDvsSF_nlos = -0.52
        DSvsSF_nlos = -0.21
        ASDvsASA_nlos = 0.34
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = 0.01
        ZSAvsSF_nlos = -0.33
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.68
        ZSAvsDS_nlos = 0.11
        ZSDvsASD_nlos = 0.59
        ZSAvsASD_nlos = 0.14
        ZSDvsASA_nlos = 0.34
        ZSAvsASA_nlos = 0.16
        ZSDvsZSA_nlos = 0.09

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_ka_band_40_degrees_dl(self):
        elevation_angle = 40.0

        direction = "downlink"
        scenario = "urb"
        carrier_frequency = 20.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.3
        ASAvsSF_nlos = -0.04
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.26
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = 0.0
        ZSAvsSF_nlos = -0.33
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.0
        ZSAvsDS_nlos = 0.13
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = 0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = 0.16
        ZSDvsZSA_nlos = 0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_ka_band_40_degrees_ul(self):
        elevation_angle = 40.0

        direction = "uplink"
        scenario = "urb"
        carrier_frequency = 30.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.52
        ASAvsDS_nlos = 0.3
        ASAvsSF_nlos = -0.04
        ASDvsSF_nlos = -0.53
        DSvsSF_nlos = -0.26
        ASDvsASA_nlos = 0.38
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = 0.01
        ZSAvsSF_nlos = -0.33
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.67
        ZSAvsDS_nlos = 0.13
        ZSDvsASD_nlos = 0.55
        ZSAvsASD_nlos = 0.18
        ZSDvsASA_nlos = 0.38
        ZSAvsASA_nlos = 0.16
        ZSDvsZSA_nlos = 0.11

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_ka_band_50_degrees_dl(self):
        elevation_angle = 50.0

        direction = "downlink"
        scenario = "urb"
        carrier_frequency = 20.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.23
        ASAvsSF_nlos = -0.03
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.25
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = 0.0
        ZSAvsSF_nlos = -0.41
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.0
        ZSAvsDS_nlos = -0.04
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = 0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = 0.18
        ZSDvsZSA_nlos = 0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_ka_band_50_degrees_ul(self):
        elevation_angle = 50.0

        direction = "uplink"
        scenario = "urb"
        carrier_frequency = 30.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.55
        ASAvsDS_nlos = 0.23
        ASAvsSF_nlos = -0.03
        ASDvsSF_nlos = -0.57
        DSvsSF_nlos = -0.25
        ASDvsASA_nlos = 0.28
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = 0.03
        ZSAvsSF_nlos = -0.41
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.65
        ZSAvsDS_nlos = -0.04
        ZSDvsASD_nlos = 0.54
        ZSAvsASD_nlos = 0.01
        ZSDvsASA_nlos = 0.31
        ZSAvsASA_nlos = 0.18
        ZSDvsZSA_nlos = 0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_ka_band_60_degrees_dl(self):
        elevation_angle = 60.0

        direction = "downlink"
        scenario = "urb"
        carrier_frequency = 20.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.21
        ASAvsSF_nlos = -0.05
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.2
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = 0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.0
        ZSAvsDS_nlos = -0.14
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = 0.21
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_ka_band_60_degrees_ul(self):
        elevation_angle = 60.0

        direction = "uplink"
        scenario = "urb"
        carrier_frequency = 30.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.57
        ASAvsDS_nlos = 0.21
        ASAvsSF_nlos = -0.05
        ASDvsSF_nlos = -0.53
        DSvsSF_nlos = -0.2
        ASDvsASA_nlos = 0.2
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = 0.03
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.67
        ZSAvsDS_nlos = -0.14
        ZSDvsASD_nlos = 0.6
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.25
        ZSAvsASA_nlos = 0.21
        ZSDvsZSA_nlos = -0.09

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_ka_band_70_degrees_dl(self):
        elevation_angle = 70.0

        direction = "downlink"
        scenario = "urb"
        carrier_frequency = 20.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.23
        ASAvsSF_nlos = -0.03
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.19
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.36
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.0
        ZSAvsDS_nlos = -0.11
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = 0.02
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_ka_band_70_degrees_ul(self):
        elevation_angle = 70.0

        direction = "uplink"
        scenario = "urb"
        carrier_frequency = 30.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.61
        ASAvsDS_nlos = 0.23
        ASAvsSF_nlos = -0.03
        ASDvsSF_nlos = -0.5
        DSvsSF_nlos = -0.19
        ASDvsASA_nlos = 0.26
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.02
        ZSAvsSF_nlos = -0.36
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.63
        ZSAvsDS_nlos = -0.11
        ZSDvsASD_nlos = 0.64
        ZSAvsASD_nlos = -0.11
        ZSDvsASA_nlos = 0.23
        ZSAvsASA_nlos = 0.02
        ZSDvsZSA_nlos = -0.15

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_ka_band_80_degrees_dl(self):
        elevation_angle = 80.0

        direction = "downlink"
        scenario = "urb"
        carrier_frequency = 20.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.23
        ASAvsSF_nlos = -0.01
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.2
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.37
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.0
        ZSAvsDS_nlos = -0.24
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.13
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_ka_band_80_degrees_ul(self):
        elevation_angle = 80.0

        direction = "uplink"
        scenario = "urb"
        carrier_frequency = 30.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.59
        ASAvsDS_nlos = 0.23
        ASAvsSF_nlos = -0.01
        ASDvsSF_nlos = -0.49
        DSvsSF_nlos = -0.2
        ASDvsASA_nlos = 0.23
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.05
        ZSAvsSF_nlos = -0.37
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.61
        ZSAvsDS_nlos = -0.24
        ZSDvsASD_nlos = 0.6
        ZSAvsASD_nlos = -0.24
        ZSDvsASA_nlos = 0.22
        ZSAvsASA_nlos = -0.13
        ZSDvsZSA_nlos = -0.29

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_ka_band_90_degrees_dl(self):
        elevation_angle = 90.0

        direction = "downlink"
        scenario = "urb"
        carrier_frequency = 20.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.36
        ASAvsSF_nlos = -0.03
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.19
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.33
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.0
        ZSAvsDS_nlos = -0.19
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.35
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)



    def test_ka_band_90_degrees_ul(self):
        elevation_angle = 90.0

        direction = "uplink"
        scenario = "urb"
        carrier_frequency = 30.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = Urban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.65
        ASAvsDS_nlos = 0.36
        ASAvsSF_nlos = -0.03
        ASDvsSF_nlos = -0.38
        DSvsSF_nlos = -0.19
        ASDvsASA_nlos = 0.31
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.12
        ZSAvsSF_nlos = -0.33
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = 0.54
        ZSAvsDS_nlos = -0.19
        ZSDvsASD_nlos = 0.6
        ZSAvsASD_nlos = -0.2
        ZSDvsASA_nlos = 0.29
        ZSAvsASA_nlos = -0.35
        ZSDvsZSA_nlos = -0.33

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


class Test_DUR(unittest.TestCase):
# Values taken from Table 6.7.2-4a: Channel model parameters for Urban Scenario (NLOS) at S band and 
# Table 6.7.2-3a: Channel model parameters for Urban Scenario (LOS) at S band
    def test_s_band_10_degrees_dl(self):
        elevation_angle = 10.0

        direction = "downlink"
        scenario = "dur"
        carrier_frequency = 2.2e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_s_band_10_degrees_ul(self):
        elevation_angle = 10.0

        direction = "uplink"
        scenario = "dur"
        carrier_frequency = 2.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_s_band_20_degrees_dl(self):
        elevation_angle = 20.0

        direction = "downlink"
        scenario = "dur"
        carrier_frequency = 2.2e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_s_band_20_degrees_ul(self):
        elevation_angle = 20.0

        direction = "uplink"
        scenario = "dur"
        carrier_frequency = 2.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_s_band_30_degrees_dl(self):
        elevation_angle = 30.0

        direction = "downlink"
        scenario = "dur"
        carrier_frequency = 2.2e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_s_band_30_degrees_ul(self):
        elevation_angle = 30.0

        direction = "uplink"
        scenario = "dur"
        carrier_frequency = 2.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_s_band_40_degrees_dl(self):
        elevation_angle = 40.0

        direction = "downlink"
        scenario = "dur"
        carrier_frequency = 2.2e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_s_band_40_degrees_ul(self):
        elevation_angle = 40.0

        direction = "uplink"
        scenario = "dur"
        carrier_frequency = 2.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_s_band_50_degrees_dl(self):
        elevation_angle = 50.0

        direction = "downlink"
        scenario = "dur"
        carrier_frequency = 2.2e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_s_band_50_degrees_ul(self):
        elevation_angle = 50.0

        direction = "uplink"
        scenario = "dur"
        carrier_frequency = 2.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_s_band_60_degrees_dl(self):
        elevation_angle = 60.0

        direction = "downlink"
        scenario = "dur"
        carrier_frequency = 2.2e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_s_band_60_degrees_ul(self):
        elevation_angle = 60.0

        direction = "uplink"
        scenario = "dur"
        carrier_frequency = 2.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_s_band_70_degrees_dl(self):
        elevation_angle = 70.0

        direction = "downlink"
        scenario = "dur"
        carrier_frequency = 2.2e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_s_band_70_degrees_ul(self):
        elevation_angle = 70.0

        direction = "uplink"
        scenario = "dur"
        carrier_frequency = 2.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_s_band_80_degrees_dl(self):
        elevation_angle = 80.0

        direction = "downlink"
        scenario = "dur"
        carrier_frequency = 2.2e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_s_band_80_degrees_ul(self):
        elevation_angle = 80.0

        direction = "uplink"
        scenario = "dur"
        carrier_frequency = 2.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_s_band_90_degrees_dl(self):
        elevation_angle = 90.0

        direction = "downlink"
        scenario = "dur"
        carrier_frequency = 2.2e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_s_band_90_degrees_ul(self):
        elevation_angle = 90.0

        direction = "uplink"
        scenario = "dur"
        carrier_frequency = 2.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)
    
    # Values taken from Table 6.7.2-1b: Channel model parameters for Dense Urban Scenario (LOS) in Ka band and
    # Table 6.7.2-2b: Channel model parameters for Dense Urban Scenario (NLOS) in Ka band
    
    def test_ka_band_10_degrees_dl(self):
        elevation_angle = 10.0

        direction = "downlink"
        scenario = "dur"
        carrier_frequency = 20.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_ka_band_10_degrees_ul(self):
        elevation_angle = 10.0

        direction = "uplink"
        scenario = "dur"
        carrier_frequency = 30.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_ka_band_20_degrees_dl(self):
        elevation_angle = 20.0

        direction = "downlink"
        scenario = "dur"
        carrier_frequency = 20.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_ka_band_20_degrees_ul(self):
        elevation_angle = 20.0

        direction = "uplink"
        scenario = "dur"
        carrier_frequency = 30.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_ka_band_30_degrees_dl(self):
        elevation_angle = 30.0

        direction = "downlink"
        scenario = "dur"
        carrier_frequency = 20.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_ka_band_30_degrees_ul(self):
        elevation_angle = 30.0

        direction = "uplink"
        scenario = "dur"
        carrier_frequency = 30.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_ka_band_40_degrees_dl(self):
        elevation_angle = 40.0

        direction = "downlink"
        scenario = "dur"
        carrier_frequency = 20.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_ka_band_40_degrees_ul(self):
        elevation_angle = 40.0

        direction = "uplink"
        scenario = "dur"
        carrier_frequency = 30.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_ka_band_50_degrees_dl(self):
        elevation_angle = 50.0

        direction = "downlink"
        scenario = "dur"
        carrier_frequency = 20.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_ka_band_50_degrees_ul(self):
        elevation_angle = 50.0

        direction = "uplink"
        scenario = "dur"
        carrier_frequency = 30.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_ka_band_60_degrees_dl(self):
        elevation_angle = 60.0

        direction = "downlink"
        scenario = "dur"
        carrier_frequency = 20.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_ka_band_60_degrees_ul(self):
        elevation_angle = 60.0

        direction = "uplink"
        scenario = "dur"
        carrier_frequency = 30.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_ka_band_70_degrees_dl(self):
        elevation_angle = 70.0

        direction = "downlink"
        scenario = "dur"
        carrier_frequency = 20.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_ka_band_70_degrees_ul(self):
        elevation_angle = 70.0

        direction = "uplink"
        scenario = "dur"
        carrier_frequency = 30.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_ka_band_80_degrees_dl(self):
        elevation_angle = 80.0

        direction = "downlink"
        scenario = "dur"
        carrier_frequency = 20.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_ka_band_80_degrees_ul(self):
        elevation_angle = 80.0

        direction = "uplink"
        scenario = "dur"
        carrier_frequency = 30.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_ka_band_90_degrees_dl(self):
        elevation_angle = 90.0

        direction = "downlink"
        scenario = "dur"
        carrier_frequency = 20.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_ka_band_90_degrees_ul(self):
        elevation_angle = 90.0

        direction = "uplink"
        scenario = "dur"
        carrier_frequency = 30.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = DenseUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)
    
class Test_SUR(unittest.TestCase):
# Values taken Table 6.7.2-5a: Channel model parameters for Suburban Scenario (LOS) in S band and 
# Table 6.7.2-6a: Channel model parameters for Suburban Scenario (NLOS) in S band
    def test_s_band_10_degrees_dl(self):
        elevation_angle = 10.0

        direction = "downlink"
        scenario = "sur"
        carrier_frequency = 2.2e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_s_band_10_degrees_ul(self):
        elevation_angle = 10.0

        direction = "uplink"
        scenario = "sur"
        carrier_frequency = 2.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_s_band_20_degrees_dl(self):
        elevation_angle = 20.0

        direction = "downlink"
        scenario = "sur"
        carrier_frequency = 2.2e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_s_band_20_degrees_ul(self):
        elevation_angle = 20.0

        direction = "uplink"
        scenario = "sur"
        carrier_frequency = 2.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_s_band_30_degrees_dl(self):
        elevation_angle = 30.0

        direction = "downlink"
        scenario = "sur"
        carrier_frequency = 2.2e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_s_band_30_degrees_ul(self):
        elevation_angle = 30.0

        direction = "uplink"
        scenario = "sur"
        carrier_frequency = 2.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_s_band_40_degrees_dl(self):
        elevation_angle = 40.0

        direction = "downlink"
        scenario = "sur"
        carrier_frequency = 2.2e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_s_band_40_degrees_ul(self):
        elevation_angle = 40.0

        direction = "uplink"
        scenario = "sur"
        carrier_frequency = 2.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_s_band_50_degrees_dl(self):
        elevation_angle = 50.0

        direction = "downlink"
        scenario = "sur"
        carrier_frequency = 2.2e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_s_band_50_degrees_ul(self):
        elevation_angle = 50.0

        direction = "uplink"
        scenario = "sur"
        carrier_frequency = 2.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_s_band_60_degrees_dl(self):
        elevation_angle = 60.0

        direction = "downlink"
        scenario = "sur"
        carrier_frequency = 2.2e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_s_band_60_degrees_ul(self):
        elevation_angle = 60.0

        direction = "uplink"
        scenario = "sur"
        carrier_frequency = 2.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_s_band_70_degrees_dl(self):
        elevation_angle = 70.0

        direction = "downlink"
        scenario = "sur"
        carrier_frequency = 2.2e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_s_band_70_degrees_ul(self):
        elevation_angle = 70.0

        direction = "uplink"
        scenario = "sur"
        carrier_frequency = 2.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_s_band_80_degrees_dl(self):
        elevation_angle = 80.0

        direction = "downlink"
        scenario = "sur"
        carrier_frequency = 2.2e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_s_band_80_degrees_ul(self):
        elevation_angle = 80.0

        direction = "uplink"
        scenario = "sur"
        carrier_frequency = 2.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_s_band_90_degrees_dl(self):
        elevation_angle = 90.0

        direction = "downlink"
        scenario = "sur"
        carrier_frequency = 2.2e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_s_band_90_degrees_ul(self):
        elevation_angle = 90.0

        direction = "uplink"
        scenario = "sur"
        carrier_frequency = 2.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_ka_band_10_degrees_dl(self):
        elevation_angle = 10.0

        direction = "downlink"
        scenario = "sur"
        carrier_frequency = 20.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_ka_band_10_degrees_ul(self):
        elevation_angle = 10.0

        direction = "uplink"
        scenario = "sur"
        carrier_frequency = 30.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_ka_band_20_degrees_dl(self):
        elevation_angle = 20.0

        direction = "downlink"
        scenario = "sur"
        carrier_frequency = 20.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_ka_band_20_degrees_ul(self):
        elevation_angle = 20.0

        direction = "uplink"
        scenario = "sur"
        carrier_frequency = 30.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_ka_band_30_degrees_dl(self):
        elevation_angle = 30.0

        direction = "downlink"
        scenario = "sur"
        carrier_frequency = 20.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_ka_band_30_degrees_ul(self):
        elevation_angle = 30.0

        direction = "uplink"
        scenario = "sur"
        carrier_frequency = 30.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_ka_band_40_degrees_dl(self):
        elevation_angle = 40.0

        direction = "downlink"
        scenario = "sur"
        carrier_frequency = 20.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_ka_band_40_degrees_ul(self):
        elevation_angle = 40.0

        direction = "uplink"
        scenario = "sur"
        carrier_frequency = 30.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_ka_band_50_degrees_dl(self):
        elevation_angle = 50.0

        direction = "downlink"
        scenario = "sur"
        carrier_frequency = 20.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_ka_band_50_degrees_ul(self):
        elevation_angle = 50.0

        direction = "uplink"
        scenario = "sur"
        carrier_frequency = 30.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_ka_band_60_degrees_dl(self):
        elevation_angle = 60.0

        direction = "downlink"
        scenario = "sur"
        carrier_frequency = 20.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_ka_band_60_degrees_ul(self):
        elevation_angle = 60.0

        direction = "uplink"
        scenario = "sur"
        carrier_frequency = 30.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_ka_band_70_degrees_dl(self):
        elevation_angle = 70.0

        direction = "downlink"
        scenario = "sur"
        carrier_frequency = 20.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_ka_band_70_degrees_ul(self):
        elevation_angle = 70.0

        direction = "uplink"
        scenario = "sur"
        carrier_frequency = 30.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_ka_band_80_degrees_dl(self):
        elevation_angle = 80.0

        direction = "downlink"
        scenario = "sur"
        carrier_frequency = 20.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_ka_band_80_degrees_ul(self):
        elevation_angle = 80.0

        direction = "uplink"
        scenario = "sur"
        carrier_frequency = 30.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        # Increased batch size, as number of NLOS is very low
        topology = utils.gen_single_sector_topology(batch_size=1000, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)

    def test_ka_band_90_degrees_dl(self):
        elevation_angle = 90.0

        direction = "downlink"
        scenario = "sur"
        carrier_frequency = 20.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.0
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.0
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.0
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.0
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.0
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.0
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.0
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.0
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.0
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.0
        ZSAvsASD_nlos = -0.0
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)


    def test_ka_band_90_degrees_ul(self):
        elevation_angle = 90.0

        direction = "uplink"
        scenario = "sur"
        carrier_frequency = 30.0e9
        ut_array = create_ut_ant(carrier_frequency)
        bs_array = create_bs_ant(carrier_frequency)

        channel_model = SubUrban(carrier_frequency=carrier_frequency,
                                            ut_array=ut_array,
                                            bs_array=bs_array,
                                            direction=direction,
                                            elevation_angle=elevation_angle,
                                            enable_pathloss=True,
                                            enable_shadow_fading=True)
        
        topology = utils.gen_single_sector_topology(batch_size=100, num_ut=100, scenario=scenario, elevation_angle=elevation_angle, bs_height=600000.0)
        channel_model.set_topology(*topology)
        
        # DS, ASD, ASA, SF, K, ZSA, ZSD
        squared_corr_matrix = square_matrix(channel_model._lsp_sampler._cross_lsp_correlation_matrix_sqrt)
        los_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los)
        nlos_squared_corr_matrix = tf.boolean_mask(squared_corr_matrix, channel_model._scenario.los == False)

        ASDvsDS_los = 0.4
        ASAvsDS_los = 0.8
        ASAvsSF_los = -0.5
        ASDvsSF_los = -0.5
        DSvsSF_los = -0.4
        ASDvsASA_los = 0.0
        ASDvsK_los = 0.0
        ASAvsK_los = -0.2
        DSvsK_los = -0.4
        SFvsK_los = 0.0
        ZSDvsSF_los = 0.0
        ZSAvsSF_los = -0.8
        ZSDvsK_los = 0.0
        ZSAvsK_los = 0.0
        ZSDvsDS_los = -0.2
        ZSAvsDS_los = 0.0
        ZSDvsASD_los = 0.5
        ZSAvsASD_los = 0.0
        ZSDvsASA_los = -0.3
        ZSAvsASA_los = 0.4
        ZSDvsZSA_los = 0.0

        ASDvsDS_nlos = 0.4
        ASAvsDS_nlos = 0.6
        ASAvsSF_nlos = 0.0
        ASDvsSF_nlos = -0.6
        DSvsSF_nlos = -0.4
        ASDvsASA_nlos = 0.4
        ASDvsK_nlos = 0.0
        ASAvsK_nlos = 0.0
        DSvsK_nlos = 0.0
        SFvsK_nlos = 0.0
        ZSDvsSF_nlos = -0.0
        ZSAvsSF_nlos = -0.4
        ZSDvsK_nlos = 0.0
        ZSAvsK_nlos = 0.0
        ZSDvsDS_nlos = -0.5
        ZSAvsDS_nlos = -0.0
        ZSDvsASD_nlos = 0.5
        ZSAvsASD_nlos = -0.1
        ZSDvsASA_nlos = 0.0
        ZSAvsASA_nlos = -0.0
        ZSDvsZSA_nlos = -0.0

        ASDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,1] - ASDvsDS_los) <= 0.0001
        ASDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,0] - ASDvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,0] - ASAvsDS_los) <= 0.0001
        ASAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,2] - ASAvsDS_los) <= 0.0001
        ASAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,3] - ASAvsSF_los) <= 0.0001
        ASAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,2] - ASAvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,3] - ASDvsSF_los) <= 0.0001
        ASDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,1] - ASDvsSF_los) <= 0.0001
        DSvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,3] - DSvsSF_los) <= 0.0001
        DSvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,0] - DSvsSF_los) <= 0.0001
        ASDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,1] - ASDvsASA_los) <= 0.0001
        ASDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,2] - ASDvsASA_los) <= 0.0001
        ASDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,1,4] - ASDvsK_los) <= 0.0001
        ASDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,1] - ASDvsK_los) <= 0.0001
        ASAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,2,4] - ASAvsK_los) <= 0.0001
        ASAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,2] - ASAvsK_los) <= 0.0001
        DSvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,0,4] - DSvsK_los) <= 0.0001
        DSvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,0] - DSvsK_los) <= 0.0001
        SFvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,4,3] - SFvsK_los) <= 0.0001
        SFvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,4] - SFvsK_los) <= 0.0001
        ZSDvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,3] - ZSDvsSF_los) <= 0.0001
        ZSDvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,6] - ZSDvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,3] - ZSAvsSF_los) <= 0.0001
        ZSAvsSF_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,3,5] - ZSAvsSF_los) <= 0.0001
        ZSDvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,4] - ZSDvsK_los) <= 0.0001
        ZSDvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,6] - ZSDvsK_los) <= 0.0001
        ZSAvsK_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,4] - ZSAvsK_los) <= 0.0001
        ZSAvsK_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,4,5] - ZSAvsK_los) <= 0.0001
        ZSDvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,0] - ZSDvsDS_los) <= 0.0001
        ZSDvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,6] - ZSDvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,0] - ZSAvsDS_los) <= 0.0001
        ZSAvsDS_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,0,5] - ZSAvsDS_los) <= 0.0001
        ZSDvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,1] - ZSDvsASD_los) <= 0.0001
        ZSDvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,6] - ZSDvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,1] - ZSAvsASD_los) <= 0.0001
        ZSAvsASD_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,1,5] - ZSAvsASD_los) <= 0.0001
        ZSDvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,2] - ZSDvsASA_los) <= 0.0001
        ZSDvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,6] - ZSDvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,5,2] - ZSAvsASA_los) <= 0.0001
        ZSAvsASA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,2,5] - ZSAvsASA_los) <= 0.0001
        ZSDvsZSA_within_range_los_1 = tf.abs(los_squared_corr_matrix[:,6,5] - ZSDvsZSA_los) <= 0.0001
        ZSDvsZSA_within_range_los_2 = tf.abs(los_squared_corr_matrix[:,5,6] - ZSDvsZSA_los) <= 0.0001

        main_diag_0_los = tf.abs(los_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_los = tf.abs(los_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_los = tf.abs(los_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_los = tf.abs(los_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_los = tf.abs(los_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_los = tf.abs(los_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_los = tf.abs(los_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_los_1)
        assert tf.reduce_all(ASDvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsDS_within_range_los_1)
        assert tf.reduce_all(ASAvsDS_within_range_los_2)
        assert tf.reduce_all(ASAvsSF_within_range_los_1)
        assert tf.reduce_all(ASAvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsSF_within_range_los_1)
        assert tf.reduce_all(ASDvsSF_within_range_los_2)
        assert tf.reduce_all(DSvsSF_within_range_los_1)
        assert tf.reduce_all(DSvsSF_within_range_los_2)
        assert tf.reduce_all(ASDvsASA_within_range_los_1)
        assert tf.reduce_all(ASDvsASA_within_range_los_2)
        assert tf.reduce_all(ASDvsK_within_range_los_1)
        assert tf.reduce_all(ASDvsK_within_range_los_2)
        assert tf.reduce_all(ASAvsK_within_range_los_1)
        assert tf.reduce_all(ASAvsK_within_range_los_2)
        assert tf.reduce_all(DSvsK_within_range_los_1)
        assert tf.reduce_all(DSvsK_within_range_los_2)
        assert tf.reduce_all(SFvsK_within_range_los_1)
        assert tf.reduce_all(SFvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsSF_within_range_los_1)
        assert tf.reduce_all(ZSDvsSF_within_range_los_2)
        assert tf.reduce_all(ZSAvsSF_within_range_los_1)
        assert tf.reduce_all(ZSAvsSF_within_range_los_2)
        assert tf.reduce_all(ZSDvsK_within_range_los_1)
        assert tf.reduce_all(ZSDvsK_within_range_los_2)
        assert tf.reduce_all(ZSAvsK_within_range_los_1)
        assert tf.reduce_all(ZSAvsK_within_range_los_2)
        assert tf.reduce_all(ZSDvsDS_within_range_los_1)
        assert tf.reduce_all(ZSDvsDS_within_range_los_2)
        assert tf.reduce_all(ZSAvsDS_within_range_los_1)
        assert tf.reduce_all(ZSAvsDS_within_range_los_2)
        assert tf.reduce_all(ZSDvsASD_within_range_los_1)
        assert tf.reduce_all(ZSDvsASD_within_range_los_2)
        assert tf.reduce_all(ZSAvsASD_within_range_los_1)
        assert tf.reduce_all(ZSAvsASD_within_range_los_2)
        assert tf.reduce_all(ZSDvsASA_within_range_los_1)
        assert tf.reduce_all(ZSDvsASA_within_range_los_2)
        assert tf.reduce_all(ZSAvsASA_within_range_los_1)
        assert tf.reduce_all(ZSAvsASA_within_range_los_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_los_2)

        assert tf.reduce_all(main_diag_0_los)
        assert tf.reduce_all(main_diag_1_los)
        assert tf.reduce_all(main_diag_2_los)
        assert tf.reduce_all(main_diag_3_los)
        assert tf.reduce_all(main_diag_4_los)
        assert tf.reduce_all(main_diag_5_los)
        assert tf.reduce_all(main_diag_6_los)

        

        ASDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,1] - ASDvsDS_nlos) <= 0.0001
        ASDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,0] - ASDvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,0] - ASAvsDS_nlos) <= 0.0001
        ASAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,2] - ASAvsDS_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,3] - ASAvsSF_nlos) <= 0.0001
        ASAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,2] - ASAvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,3] - ASDvsSF_nlos) <= 0.0001
        ASDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,1] - ASDvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,3] - DSvsSF_nlos) <= 0.0001
        DSvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,0] - DSvsSF_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,1] - ASDvsASA_nlos) <= 0.0001
        ASDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,2] - ASDvsASA_nlos) <= 0.0001
        ASDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,1,4] - ASDvsK_nlos) <= 0.0001
        ASDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,1] - ASDvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,2,4] - ASAvsK_nlos) <= 0.0001
        ASAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,2] - ASAvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,0,4] - DSvsK_nlos) <= 0.0001
        DSvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,0] - DSvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,4,3] - SFvsK_nlos) <= 0.0001
        SFvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,4] - SFvsK_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,3] - ZSDvsSF_nlos) <= 0.0001
        ZSDvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,6] - ZSDvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,3] - ZSAvsSF_nlos) <= 0.0001
        ZSAvsSF_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,3,5] - ZSAvsSF_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,4] - ZSDvsK_nlos) <= 0.0001
        ZSDvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,6] - ZSDvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,4] - ZSAvsK_nlos) <= 0.0001
        ZSAvsK_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,4,5] - ZSAvsK_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,0] - ZSDvsDS_nlos) <= 0.0001
        ZSDvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,6] - ZSDvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,0] - ZSAvsDS_nlos) <= 0.0001
        ZSAvsDS_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,0,5] - ZSAvsDS_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,1] - ZSDvsASD_nlos) <= 0.0001
        ZSDvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,6] - ZSDvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,1] - ZSAvsASD_nlos) <= 0.0001
        ZSAvsASD_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,1,5] - ZSAvsASD_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,2] - ZSDvsASA_nlos) <= 0.0001
        ZSDvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,6] - ZSDvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,5,2] - ZSAvsASA_nlos) <= 0.0001
        ZSAvsASA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,2,5] - ZSAvsASA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_1 = tf.abs(nlos_squared_corr_matrix[:,6,5] - ZSDvsZSA_nlos) <= 0.0001
        ZSDvsZSA_within_range_nlos_2 = tf.abs(nlos_squared_corr_matrix[:,5,6] - ZSDvsZSA_nlos) <= 0.0001

        main_diag_0_nlos = tf.abs(nlos_squared_corr_matrix[:,0,0] - 1.0) <= 0.0001
        main_diag_1_nlos = tf.abs(nlos_squared_corr_matrix[:,1,1] - 1.0) <= 0.0001
        main_diag_2_nlos = tf.abs(nlos_squared_corr_matrix[:,2,2] - 1.0) <= 0.0001
        main_diag_3_nlos = tf.abs(nlos_squared_corr_matrix[:,3,3] - 1.0) <= 0.0001
        main_diag_4_nlos = tf.abs(nlos_squared_corr_matrix[:,4,4] - 1.0) <= 0.0001
        main_diag_5_nlos = tf.abs(nlos_squared_corr_matrix[:,5,5] - 1.0) <= 0.0001
        main_diag_6_nlos = tf.abs(nlos_squared_corr_matrix[:,6,6] - 1.0) <= 0.0001

        assert tf.reduce_all(ASDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ASAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ASDvsSF_within_range_nlos_2)
        assert tf.reduce_all(DSvsSF_within_range_nlos_1)
        assert tf.reduce_all(DSvsSF_within_range_nlos_2)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ASDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ASDvsK_within_range_nlos_1)
        assert tf.reduce_all(ASDvsK_within_range_nlos_2)
        assert tf.reduce_all(ASAvsK_within_range_nlos_1)
        assert tf.reduce_all(ASAvsK_within_range_nlos_2)
        assert tf.reduce_all(DSvsK_within_range_nlos_1)
        assert tf.reduce_all(DSvsK_within_range_nlos_2)
        assert tf.reduce_all(SFvsK_within_range_nlos_1)
        assert tf.reduce_all(SFvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsSF_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsK_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsDS_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASD_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_1)
        assert tf.reduce_all(ZSAvsASA_within_range_nlos_2)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_1)
        assert tf.reduce_all(ZSDvsZSA_within_range_nlos_2)

        assert tf.reduce_all(main_diag_0_nlos)
        assert tf.reduce_all(main_diag_1_nlos)
        assert tf.reduce_all(main_diag_2_nlos)
        assert tf.reduce_all(main_diag_3_nlos)
        assert tf.reduce_all(main_diag_4_nlos)
        assert tf.reduce_all(main_diag_5_nlos)
        assert tf.reduce_all(main_diag_6_nlos)
         
if __name__ == '__main__':
    unittest.main()